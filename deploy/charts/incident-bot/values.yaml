# Default values for incident-bot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

affinity: {}

args: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

command: []

configMap:
  create: true
  data:
    platform: slack
    digest_channel: incidents
    roles:
      incident_commander: "The Incident Commander is the decision maker during a major incident, delegating tasks and listening to input from subject matter experts in order to bring the incident to resolution. They become the highest ranking individual on any major incident call, regardless of their day-to-day rank. Their decisions made as commander are final.\\n\\nYour job as an Incident Commander is to listen to the call and to watch the incident Slack room in order to provide clear coordination, recruiting others to gather context and details. You should not be performing any actions or remediations, checking graphs, or investigating logs. Those tasks should be delegated.\\n\\nAn IC should also be considering next steps and backup plans at every opportunity, in an effort to avoid getting stuck without any clear options to proceed and to keep things moving towards resolution.\\n\\nMore information: https://response.pagerduty.com/training/incident_commander/"
      communications_liaison: "The purpose of the Communications Liaison is to be the primary individual in charge of notifying our customers of the current conditions, and informing the Incident Commander of any relevant feedback from customers as the incident progresses.\\n\\nIt's important for the rest of the command staff to be able to focus on the problem at hand, rather than worrying about crafting messages to customers.\\n\\nYour job as Communications Liaison is to listen to the call, watch the incident Slack room, and track incoming customer support requests, keeping track of what's going on and how far the incident is progressing (still investigating vs close to resolution).\\n\\nThe Incident Commander will instruct you to notify customers of the incident and keep them updated at various points throughout the call. You will be required to craft the message, gain approval from the IC, and then disseminate that message to customers.\\n\\nMore information: https://response.pagerduty.com/training/customer_liaison/"
    severities: []
    statuses:
      - investigating
      - identified
      - monitoring
      - resolved
    options:
      channel_topic:
        default: 'This is the default incident channel topic. You can edit it in settings.'
        # If set to true, set the channel topic to the meeting link. This will override incident_channel_topic.
        # set_to_meeting_link: true
      timezone: UTC
      meeting_link: 'https://zoom.us'
      skip_logs_for_user_agent: []
    integrations: {}
    links:
      incident_guide: https://changeme.com
      incident_postmortems: https://changeme.com

database:
  enabled: false
  password:

deploymentAnnotations: {}

envFromSecret:
  enabled: false
  secretName:

envVars:
  CONFIG_FILE_PATH: /config/incident-bot/config.yaml

healthCheck:
  enabled: true
  path: /api/v1/health
  port: 3000
  scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 1

image:
  repository: eb129/incident-bot
  # suffix:
  # tag:
  pullPolicy: Always

imagePullSecrets: []

ingress:
  enabled: false
  className: ''
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: incident-bot.mydomain.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: incident-bot-tls
      hosts:
        - incident-bot.mydomain.com

nodeSelector: {}

podAnnotations: {}

podDisruptionBudget:
  enabled: false
  minAvailable: 1

podSecurityContext:
  {}
  # fsGroup: 2000

replicaCount: 1

resources:
  limits:
    cpu: 500m
    memory: 512M
  requests:
    cpu: 250m
    memory: 128M

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

tolerations: []
